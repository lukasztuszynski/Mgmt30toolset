// <auto-generated />
using Mgmt30toolset.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Mgmt30toolset.Web.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20171118205334_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("Mgmt30toolset.Model.Bonus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<string>("Description");

                    b.Property<int?>("ReceiverId");

                    b.Property<int?>("SenderId");

                    b.Property<int?>("UserCreatedId");

                    b.Property<int?>("UserUpdatedId");

                    b.Property<int>("Value");

                    b.HasKey("Id");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.HasIndex("UserCreatedId");

                    b.HasIndex("UserUpdatedId");

                    b.ToTable("Bonuses");
                });

            modelBuilder.Entity("Mgmt30toolset.Model.BonusTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("BonusId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<int?>("UserCreatedId");

                    b.Property<int?>("UserUpdatedId");

                    b.HasKey("Id");

                    b.HasIndex("BonusId");

                    b.HasIndex("UserCreatedId");

                    b.HasIndex("UserUpdatedId");

                    b.ToTable("BonusTags");
                });

            modelBuilder.Entity("Mgmt30toolset.Model.Kudo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CategoryId");

                    b.Property<string>("Content");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<int?>("ReceiverId");

                    b.Property<int?>("SenderId");

                    b.Property<int?>("UserCreatedId");

                    b.Property<int?>("UserUpdatedId");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.HasIndex("UserCreatedId");

                    b.HasIndex("UserUpdatedId");

                    b.ToTable("Kudos");
                });

            modelBuilder.Entity("Mgmt30toolset.Model.KudoCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int?>("UserCreatedId");

                    b.Property<int?>("UserUpdatedId");

                    b.HasKey("Id");

                    b.HasIndex("UserCreatedId");

                    b.HasIndex("UserUpdatedId");

                    b.ToTable("KudoCategories");
                });

            modelBuilder.Entity("Mgmt30toolset.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateDeleted");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<int?>("UserCreatedId");

                    b.Property<int?>("UserUpdatedId");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.HasIndex("UserCreatedId");

                    b.HasIndex("UserUpdatedId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Mgmt30toolset.Model.Bonus", b =>
                {
                    b.HasOne("Mgmt30toolset.Model.User", "Receiver")
                        .WithMany()
                        .HasForeignKey("ReceiverId");

                    b.HasOne("Mgmt30toolset.Model.User", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId");

                    b.HasOne("Mgmt30toolset.Model.User", "UserCreated")
                        .WithMany()
                        .HasForeignKey("UserCreatedId");

                    b.HasOne("Mgmt30toolset.Model.User", "UserUpdated")
                        .WithMany()
                        .HasForeignKey("UserUpdatedId");
                });

            modelBuilder.Entity("Mgmt30toolset.Model.BonusTag", b =>
                {
                    b.HasOne("Mgmt30toolset.Model.Bonus")
                        .WithMany("Tags")
                        .HasForeignKey("BonusId");

                    b.HasOne("Mgmt30toolset.Model.User", "UserCreated")
                        .WithMany()
                        .HasForeignKey("UserCreatedId");

                    b.HasOne("Mgmt30toolset.Model.User", "UserUpdated")
                        .WithMany()
                        .HasForeignKey("UserUpdatedId");
                });

            modelBuilder.Entity("Mgmt30toolset.Model.Kudo", b =>
                {
                    b.HasOne("Mgmt30toolset.Model.KudoCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("Mgmt30toolset.Model.User", "Receiver")
                        .WithMany()
                        .HasForeignKey("ReceiverId");

                    b.HasOne("Mgmt30toolset.Model.User", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId");

                    b.HasOne("Mgmt30toolset.Model.User", "UserCreated")
                        .WithMany()
                        .HasForeignKey("UserCreatedId");

                    b.HasOne("Mgmt30toolset.Model.User", "UserUpdated")
                        .WithMany()
                        .HasForeignKey("UserUpdatedId");
                });

            modelBuilder.Entity("Mgmt30toolset.Model.KudoCategory", b =>
                {
                    b.HasOne("Mgmt30toolset.Model.User", "UserCreated")
                        .WithMany()
                        .HasForeignKey("UserCreatedId");

                    b.HasOne("Mgmt30toolset.Model.User", "UserUpdated")
                        .WithMany()
                        .HasForeignKey("UserUpdatedId");
                });

            modelBuilder.Entity("Mgmt30toolset.Model.User", b =>
                {
                    b.HasOne("Mgmt30toolset.Model.User", "UserCreated")
                        .WithMany()
                        .HasForeignKey("UserCreatedId");

                    b.HasOne("Mgmt30toolset.Model.User", "UserUpdated")
                        .WithMany()
                        .HasForeignKey("UserUpdatedId");
                });
#pragma warning restore 612, 618
        }
    }
}
